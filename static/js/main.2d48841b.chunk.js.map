{"version":3,"sources":["components/Section/Section.module.css","components/Statistics/StatisticItem.js","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/NotificationMsg/NotificationMsg.js","components/App.js","index.js","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["module","exports","StatisticItem","label","value","Statistics","good","neutral","bad","total","positivePercentage","defaultProps","positivePersentage","fdbkBtn","styles","FeedbackOptions","options","onLeaveFeedback","map","option","key","type","className","onClick","section","sectionTitle","Section","title","children","Notification","propTypes","msg","PropTypes","string","isRequired","NotificationMsg","App","state","props","countTotalFeedback","countPositiveFeedbackPercentage","Math","floor","feedbackCounter","setState","prevState","this","Object","keys","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,gC,wKCerDC,EAbO,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,MAAV,OACpB,oCACE,4BACGD,EADH,KACYC,KCFVC,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,oCACE,4BACE,kBAAC,EAAD,CAAeP,MAAM,OAAOC,MAAOE,IACnC,kBAAC,EAAD,CAAeH,MAAM,UAAUC,MAAOG,IACtC,kBAAC,EAAD,CAAeJ,MAAM,MAAMC,MAAOI,IAClC,kBAAC,EAAD,CAAeL,MAAM,QAAQC,MAAOK,IACpC,kBAAC,EAAD,CACEN,MAAM,oBACNC,MAAK,UAAKM,EAAL,UAMbL,EAAWM,aAAe,CACxBF,MAAO,EACPG,mBAAoB,GAWPP,Q,OC5BPQ,E,OAAYC,EAAZD,QAsBOE,EApBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACtB,oCACGD,EAAQE,KAAI,SAAAC,GAAM,OACjB,4BACEC,IAAKD,EACLE,KAAK,SACLC,UAAWT,EACXU,QAAS,kBAAMN,EAAgBE,KAE9BA,Q,gBCXDK,EAA0BV,IAA1BU,QAASC,EAAiBX,IAAjBW,aAcFC,EAZC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,6BAASN,UAAWE,GAClB,wBAAIF,UAAWG,GAAeE,GAC7BC,I,gBCALC,aAAaC,UAAY,CACvBC,IAAKC,IAAUC,OAAOC,YAGTC,MAVS,SAAC,GAAD,IAAGJ,EAAH,EAAGA,IAAH,OACtB,oCACE,2BAAIA,KCEFK,E,4MAaJC,MAAQ,CACN/B,KAAM,EAAKgC,MAAMhC,KACjBC,QAAS,EAAK+B,MAAM/B,QACpBC,IAAK,EAAK8B,MAAM9B,K,EAOlB+B,mBAAqB,kBACnB,EAAKF,MAAM/B,KAAO,EAAK+B,MAAM9B,QAAU,EAAK8B,MAAM7B,K,EAQpDgC,gCAAkC,kBAChCC,KAAKC,MAAO,EAAKL,MAAM/B,KAAO,EAAKiC,qBAAwB,M,EAE7DI,gBAAkB,SAAAvC,GAChB,EAAKwC,UAAS,SAAAC,GAAS,sBACpBzC,EAAQyC,EAAUzC,GAAS,O,uDAW9B,IAAMK,EAAQqC,KAAKP,qBACb7B,EAAqBoC,KAAKN,kCAGhC,OACE,oCACE,kBAAC,EAAD,CAASb,MAAM,yBACb,kBAAC,EAAD,CACEX,QAAS+B,OAAOC,KAAKF,KAAKT,OAC1BpB,gBAAiB6B,KAAKH,mBAK1B,kBAAC,EAAD,CAAShB,MAAM,cACZlB,EAAQ,EACP,kBAAC,EAAD,CACEH,KAAMwC,KAAKT,MAAM/B,KACjBC,QAASuC,KAAKT,MAAM9B,QACpBC,IAAKsC,KAAKT,MAAM7B,IAChBC,MAAOA,EACPC,mBAAoBA,IAGtB,kBAAC,EAAD,CAAiBqB,IAAK,4B,GAxEhBkB,aAAZb,EACGzB,aAAe,CACpBL,KAAM,EACNC,QAAS,EACTC,IAAK,GA4EM4B,Q,YCjFfc,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U,kBCT1BtD,EAAOC,QAAU,CAAC,QAAU,oC","file":"static/js/main.2d48841b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__37lOi\",\"sectionTitle\":\"Section_sectionTitle__2WTv1\"};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst StatisticItem = ({ label, value }) => (\n  <>\n    <li>\n      {label}: {value}\n    </li>\n  </>\n);\n\nStatisticItem.propTypes = {\n  label: PropTypes.string.isRequired,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n};\n\nexport default StatisticItem;\n","import React from 'react';\nimport StatisticItem from './StatisticItem';\nimport PropTypes from 'prop-types';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\n  <>\n    <ul>\n      <StatisticItem label=\"Good\" value={good} />\n      <StatisticItem label=\"Neutral\" value={neutral} />\n      <StatisticItem label=\"Bad\" value={bad} />\n      <StatisticItem label=\"Total\" value={total} />\n      <StatisticItem\n        label=\"Positive feedback\"\n        value={`${positivePercentage}%`}\n      />\n    </ul>\n  </>\n);\n\nStatistics.defaultProps = {\n  total: 0,\n  positivePersentage: 0,\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePersentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './FeedbackOptions.module.css';\n\nconst { fdbkBtn } = styles;\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\n  <>\n    {options.map(option => (\n      <button\n        key={option}\n        type=\"button\"\n        className={fdbkBtn}\n        onClick={() => onLeaveFeedback(option)}\n      >\n        {option}\n      </button>\n    ))}\n  </>\n);\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.array.isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Section.module.css';\n\nconst { section, sectionTitle } = styles;\n\nconst Section = ({ title, children }) => (\n  <section className={section}>\n    <h2 className={sectionTitle}>{title}</h2>\n    {children}\n  </section>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst NotificationMsg = ({ msg }) => (\n  <>\n    <p>{msg}</p>\n  </>\n);\n\nNotification.propTypes = {\n  msg: PropTypes.string.isRequired,\n};\n\nexport default NotificationMsg;\n","import React, { Component } from 'react';\nimport Statistics from './Statistics';\nimport FeedbackOptions from './FeedbackOptions';\nimport Section from './Section';\nimport NotificationMsg from './NotificationMsg';\nimport PropTypes from 'prop-types';\n\nclass App extends Component {\n  static defaultProps = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  static propTypes = {\n    good: PropTypes.number.isRequired,\n    neutral: PropTypes.number.isRequired,\n    bad: PropTypes.number.isRequired,\n  };\n\n  state = {\n    good: this.props.good,\n    neutral: this.props.neutral,\n    bad: this.props.bad,\n  };\n\n  //   countTotalFeedback = () => {\n  //     return this.state.good + this.state.neutral + this.state.bad;\n  //   };\n  // the same, but shortest\n  countTotalFeedback = () =>\n    this.state.good + this.state.neutral + this.state.bad;\n\n  // countPositiveFeedbackPercentage = () => {\n  //   const positiveFeedback = this.state.good;\n  //   const total = this.countTotalFeedback();\n  //   return total === 0 ? 0 : Math.floor((positiveFeedback / total) * 100);\n  // };\n  //OR shortest variant\n  countPositiveFeedbackPercentage = () =>\n    Math.floor((this.state.good / this.countTotalFeedback()) * 100);\n\n  feedbackCounter = value => {\n    this.setState(prevState => ({\n      [value]: prevState[value] + 1,\n    }));\n  };\n\n  // feedbackAndPercentageCounter = value => {\n  //   this.feedbackCounter(value);\n  //   this.countTotalFeedback();\n  //   this.countPositiveFeedbackPercentage();\n  // };\n\n  render() {\n    const total = this.countTotalFeedback();\n    const positivePercentage = this.countPositiveFeedbackPercentage();\n    // const options = Object.keys(this.state); - can use it for destructuring\n\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={Object.keys(this.state)}\n            onLeaveFeedback={this.feedbackCounter}\n            //OR try this (if forget what we count :))\n            // onLeaveFeedback={this.feedbackAndPercentageCounter}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {total > 0 ? (\n            <Statistics\n              good={this.state.good}\n              neutral={this.state.neutral}\n              bad={this.state.bad}\n              total={total}\n              positivePercentage={positivePercentage}\n            />\n          ) : (\n            <NotificationMsg msg={'No feedback given'} />\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport 'modern-normalize/modern-normalize.css';\nimport './mainStyle.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fdbkBtn\":\"FeedbackOptions_fdbkBtn__2B9j4\"};"],"sourceRoot":""}